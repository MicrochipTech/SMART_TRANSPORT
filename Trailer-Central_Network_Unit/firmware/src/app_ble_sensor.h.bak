/*******************************************************************************
  Application BLE Sensor Header File

  Company:
    Microchip Technology Inc.

  File Name:
    app_ble_sensor.h

  Summary:
    This file contains the Application Transparent Server Role functions for this project.

  Description:
    This file contains the Application Transparent Server Role functions for this project.
    The implementation of demo mode is included in this file.
 *******************************************************************************/

// DOM-IGNORE-BEGIN
/*******************************************************************************
* Copyright (C) 2020 Microchip Technology Inc. and its subsidiaries.
*
* Subject to your compliance with these terms, you may use Microchip software
* and any derivatives exclusively with Microchip products. It is your
* responsibility to comply with third party license terms applicable to your
* use of third party software (including open source software) that may
* accompany Microchip software.
*
* THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS". NO WARRANTIES, WHETHER
* EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE, INCLUDING ANY IMPLIED
* WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY, AND FITNESS FOR A
* PARTICULAR PURPOSE.
*
* IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL, PUNITIVE,
* INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF ANY KIND
* WHATSOEVER RELATED TO THE SOFTWARE, HOWEVER CAUSED, EVEN IF MICROCHIP HAS
* BEEN ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE. TO THE
* FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN
* ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES, IF ANY,
* THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS SOFTWARE.
*******************************************************************************/
// DOM-IGNORE-END


#ifndef APP_BLE_SENSOR_H
#define APP_BLE_SENSOR_H


// *****************************************************************************
// *****************************************************************************
// Section: Included Files
// *****************************************************************************
// *****************************************************************************
#include "app_trps.h"
#include "string.h"
// *****************************************************************************
// *****************************************************************************
// Section: Macros
// *****************************************************************************
// *****************************************************************************
#define GREEN_H  85  // 240deg
#define GREEN_S  255  // 100%
#define GREEN_V  255  //100%

#define BUTTON_1  EIC_PIN_0

// Define for BLE Sensor Ctrl Commands

#define APP_TRP_VENDOR_OPCODE_BLE_SENSOR  0x8A
#define APP_TRP_VENDOR_OPCODE_MRML        0x8B


//  Defines MRML BLE Sensor Control Request ID
#define    DISCOVER_CMD              0xA0
#define    UPDATE_CMD                0xA1
#define    DISCONNECT_CMD            0xA2
#define    DISCOVER_CMD_LEN          0x01
#define    DISCOVER_RESP             0xB0
#define    UPDATE_RESP               0xB1 
#define    DISCONNECT_RESP           0xB2
#define    CHAT_SEND_CMD             0xA3
#define    GET_CONNECTION_CMD        0xA4
#define    GET_CONNECTION_RESP       0xB4
#define    SCAN_TIMEOUT_NFY          0xC0


#define    MRML_NFY_LEN                  36    
#define    MRML_UPD_NFY_LEN              7 
#define    MRML_LED_ONOFF_NFY_LEN        3 
#define    MRML_RGB_COLOR_SET_NFY_LEN    2
#define    MRML_RGB_COLOR_GET_NFY_LEN    5
#define    MRML_TEMP_NFY_LEN             4  
#define    MRML_CHAT_NFY_LEN             30
#define    MRML_SCAN_TIMEOUT_NFY_LEN     0
//  Defines BLE Sensor Control Command Set APP_TRPS_CTRL_CMD
#define    RGB_ONOFF_SET_CMD         0x10
#define    RGB_ONOFF_GET_CMD         0x11    
#define    RGB_COLOR_SET_CMD         0x12
#define    RGB_COLOR_GET_CMD         0x13


//  Defines BLE Sensor Response Command Set APP_TRPS_CTRL_RSP
#define    RGB_ONOFF_SET_RSP         0x20
#define    RGB_ONOFF_GET_RSP         0x21    
#define    RGB_COLOR_SET_RSP         0x22
#define    RGB_COLOR_GET_RSP         0x23
#define    DISCOVER_CMD_CTRL_RSP     0xD0
#define    UPDATE_CMD_CTRL_RSP       0xD1
#define    DISCONNECT_CTRL_RSP       0xD2
#define    RGB_ONOFF_SET_MRML_RSP    0xD3
#define    RGB_ONOFF_GET_MRML_RSP    0xD4    
#define    RGB_COLOR_SET_MRML_RSP    0xD5
#define    RGB_COLOR_GET_MRML_RSP    0xD6
#define    CHAT_SEND_MRML_RSP        0xD7
#define    GET_CONNECTION_RSP        0xD8
#define    RGB_ONOFF_STATUS_MRML_NFY 0xC3
#define    RGB_COLOR_MRML_NFY        0xC4
#define    TEMP_SENSOR_MRML_NFY      0xC5
//  Defines BLE Sensor Response Command length APP_TRPS_CTRL_RSP_LENGTH
#define    RGB_ONOFF_SET_RSP_LEN      0x0
#define    RGB_ONOFF_GET_RSP_LEN      0x1    
#define    RGB_COLOR_SET_RSP_LEN      0x0
#define    RGB_COLOR_GET_RSP_LEN      0x3
#define    DISCONNECT_RESP_LEN        0x2
#define    RGB_ONOFF_SET_RSP_MRML_LEN 0x1
//  Defines BLE Sensor Notify Command Set APP_TRPS_CTRL_NOTIFY
#define    RGB_ONOFF_STATUS_NFY       0x40
#define    TEMP_SENSOR_NFY            0x41
#define    RGB_COLOR_NFY              0x42
//  Defines BLE Sensor Notify Command length APP_TRPS_CTRL_NOTIFY_LENGTH
#define    RGB_ONOFF_STATUS_NFY_LEN   0x1
#define    TEMP_SENSOR_NFY_LEN        0x2

// *****************************************************************************
// *****************************************************************************
// Section: Data Types
// *****************************************************************************
// *****************************************************************************
enum APP_TRPS_LED_STATUS_T
{
    LED_OFF = 0x00,
    LED_ON = 0x01,
};

/**@brief The structure contains the information about BLE sensor data */
typedef struct
{
    uint8_t    rgbOnOffStatus;        /**< RGB LED On/Off Status */
    struct __attribute__ ((packed))
    {
        uint8_t    Hue;         /**The array contains the information about RGB colour value in HSV format. */
        uint8_t    Saturation;
        uint8_t    Value;
    }RGB_color;
    struct __attribute__ ((packed))
    {
        uint8_t    msb;
        uint8_t    lsb;
    }tempSens;
} APP_TRPS_SensorData_T;

typedef struct __attribute__ ((packed))
{
        uint8_t    msb_conn_hdl;
        uint8_t    lsb_conn_hdl;
        uint8_t    Hue;         /**The array contains the information about RGB colour value in HSV format. */
        uint8_t    Saturation;
        uint8_t    Value;
        
}PeriDevRGBData;

typedef struct __attribute__ ((packed))
{
        uint8_t    msb_conn_hdl;
        uint8_t    lsb_conn_hdl;
        uint8_t    rgbOnOffStatus;
        
}PeriDevLedOnOffData;

typedef struct __attribute__ ((packed))
{
        uint8_t    msb_conn_hdl;
        uint8_t    lsb_conn_hdl;
        uint8_t    msb_temp;
        uint8_t    lsb_temp;
        
}PeriDevLedTempData;

typedef struct __attribute__ ((packed))
{
        uint8_t    msb_conn_hdl;
        uint8_t    lsb_conn_hdl;
        uint8_t    len;
        uint8_t    data[30];
        
}PeriDevUartData;

#define BLE_SENSOR_CMD_RESP_LST_SIZE   4
#define BLE_SENSOR_DEFINE_CTRL_CMD_RESP()                \
        { RGB_ONOFF_SET_CMD, RGB_ONOFF_SET_RSP, RGB_ONOFF_SET_RSP_LEN, NULL , APP_TRPS_Sensor_LED_Ctrl},      \
        { RGB_ONOFF_GET_CMD, RGB_ONOFF_GET_RSP, RGB_ONOFF_GET_RSP_LEN, (uint8_t *)&bleSensorData.rgbOnOffStatus , NULL},       \
        { RGB_COLOR_SET_CMD, RGB_COLOR_SET_RSP, RGB_COLOR_SET_RSP_LEN, NULL , APP_TRPS_Sensor_Color_Ctrl},      \
        { RGB_COLOR_GET_CMD, RGB_COLOR_GET_RSP, RGB_COLOR_GET_RSP_LEN, (uint8_t *)&bleSensorData.RGB_color , NULL}


#define BLE_SENSOR_NOTIFY_LST_SIZE   2
#define BLE_SENSOR_DEFINE_CTRL_NOTIFY()                   \
        { RGB_ONOFF_STATUS_NFY, RGB_ONOFF_STATUS_NFY_LEN, (uint8_t *)&bleSensorData.rgbOnOffStatus},      \
        { TEMP_SENSOR_NFY, TEMP_SENSOR_NFY_LEN, (uint8_t *)&bleSensorData.tempSens},       \
        

uint8_t trpsPeripheralDiscoverResp[50];
uint8_t trpsPeripheralGetConnResp[50];
uint8_t trpsPeripheralUpdateResp[50];
uint8_t disconnect_conn_hdl[2];
PeriDevRGBData bleSensorPeriDevRGB;
PeriDevLedOnOffData bleSensorPeriDevLED;
PeriDevLedTempData bleSensorPeriDevTemp;


#define MRML_CMD_RESP_LST_SIZE   9
#define MRML_DEFINE_CTRL_CMD_RESP()                \
        { DISCOVER_CMD, DISCOVER_CMD_CTRL_RSP, RGB_ONOFF_SET_RSP_LEN, NULL , APP_TRPS_MRML_Discover},      \
        { UPDATE_CMD, UPDATE_CMD_CTRL_RSP, NULL, NULL , APP_TRPS_MRML_Update},      \
        { DISCONNECT_CMD, DISCONNECT_CTRL_RSP,RGB_ONOFF_SET_RSP_LEN , NULL ,APP_TRPS_MRML_Disconnect},    \
        { RGB_ONOFF_SET_CMD, RGB_ONOFF_SET_MRML_RSP, RGB_ONOFF_SET_RSP_LEN, NULL , APP_TRPS_MRML_Sensor_LED_Ctrl},      \
        { RGB_ONOFF_GET_CMD, RGB_ONOFF_GET_MRML_RSP, RGB_ONOFF_SET_RSP_LEN, NULL , APP_TRPS_MRML_Sensor_LED_GetStatus},       \
        { RGB_COLOR_SET_CMD, RGB_COLOR_SET_MRML_RSP, RGB_ONOFF_SET_RSP_LEN, NULL , APP_TRPS_MRML_Sensor_Color_Ctrl},      \
        { RGB_COLOR_GET_CMD, RGB_COLOR_GET_MRML_RSP, RGB_ONOFF_SET_RSP_LEN, NULL , APP_TRPS_MRML_Sensor_RGB_Color_GetStatus},      \
        { CHAT_SEND_CMD, CHAT_SEND_MRML_RSP, RGB_ONOFF_SET_RSP_LEN, NULL , APP_TRPS_MRML_Chat_Send},       \
        { GET_CONNECTION_CMD, GET_CONNECTION_RSP, RGB_ONOFF_SET_RSP_LEN, NULL , APP_TRPS_MRML_GetConn},      \


#define MRML_NOTIFY_LST_SIZE   12
#define MRML_DEFINE_CTRL_NOTIFY()                   \
        { DISCOVER_RESP,MRML_NFY_LEN , (uint8_t *)&trpsPeripheralDiscoverResp},      \
        { GET_CONNECTION_RESP,MRML_NFY_LEN , (uint8_t *)&trpsPeripheralGetConnResp},      \
        { UPDATE_RESP, MRML_UPD_NFY_LEN, (uint8_t *)&trpsPeripheralUpdateResp},       \
        { DISCONNECT_RESP, DISCONNECT_RESP_LEN, (uint8_t *)&disconnect_conn_hdl},       \
        { RGB_ONOFF_SET_RSP, MRML_LED_ONOFF_NFY_LEN, (uint8_t *)&bleSensorPeriDevLED},      \
        { RGB_ONOFF_GET_RSP, MRML_LED_ONOFF_NFY_LEN, (uint8_t *)&bleSensorPeriDevLED},       \
        { RGB_COLOR_SET_RSP, MRML_RGB_COLOR_SET_NFY_LEN, (uint8_t *)&bleSensorPeriDevRGB},      \
        { RGB_COLOR_GET_RSP, MRML_RGB_COLOR_GET_NFY_LEN, (uint8_t *)&bleSensorPeriDevRGB},      \
        { RGB_ONOFF_STATUS_MRML_NFY, MRML_LED_ONOFF_NFY_LEN, (uint8_t *)&bleSensorPeriDevLED},       \
        { RGB_COLOR_MRML_NFY, MRML_RGB_COLOR_GET_NFY_LEN, (uint8_t *)&bleSensorPeriDevRGB},       \
        { TEMP_SENSOR_MRML_NFY, MRML_TEMP_NFY_LEN, (uint8_t *)&bleSensorPeriDevTemp},       \
        { SCAN_TIMEOUT_NFY, MRML_SCAN_TIMEOUT_NFY_LEN, NULL},       \
// *****************************************************************************
// *****************************************************************************
// Section: Function Prototypes
// *****************************************************************************
// *****************************************************************************
void APP_TRPS_Sensor_Init(void);

void APP_TRPS_Sensor_DiscEvtProc(void);

void APP_TRPS_Sensor_TimerHandler(void);

void APP_TRPS_Sensor_Button_Handler(void);

void APP_TRPS_Sensor_Beacon(uint8_t* ptr_data);
#endif
